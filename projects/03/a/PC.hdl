// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits.
 *
 * In the videos 3.4 and 3.5 the sequence is different:
 * if      (reset(t)) out(t+1) = 0
 * else if (load(t))  out(t+1) = in(t)
 * else if (inc(t))   out(t+1) = out(t) + 1
 * else               out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], inc, load, reset;
    OUT out[16];

    PARTS:

    // Comment implementation
    // Mux16(a=stored,   b=false,   sel=reset, out=resetout);
    // Mux16(a=resetout, b=in,      sel=load,  out=loadout);
    // Mux16(a=loadout,  b=plusone, sel=inc,   out=incout);
    // Register(in=incout, load=true, out=out, out=stored);

    // Video Implementation
    Mux16(a=stored,  b=plusone, sel=inc,   out=incout);
    Mux16(a=incout,  b=in,      sel=load,  out=loadout);
    Mux16(a=loadout, b=false,   sel=reset, out=resetout);
    Register(in=resetout, load=true, out=out, out=stored);

    Inc16(in=stored, out=plusone);

    // Mux16(a=, b=, sel=, out=);
    // DMux16(in, sel, a=, b= );
}
